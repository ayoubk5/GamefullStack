// <auto-generated />
using DataAccessLayer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230525140901_InsertGames")]
    partial class InsertGames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.GamePlatformes", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatformes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 202,
                            Image = "https://media.rawg.io/media/games/8d6/8d69eb6c32ed6acfd75f82d532144993.jpg",
                            Name = "Action",
                            Slug = "action"
                        },
                        new
                        {
                            Id = 312,
                            Image = "https://media.rawg.io/media/games/b6b/b6b20bfc4b34e312dbc8aac53c95a348.jpg",
                            Name = "Indie",
                            Slug = "indie"
                        },
                        new
                        {
                            Id = 292,
                            Image = "https://media.rawg.io/media/games/d69/d69810315bd7e226ea2d21f9156af629.jpg",
                            Name = "Adventure",
                            Slug = "adventure"
                        },
                        new
                        {
                            Id = 488,
                            Image = "https://media.rawg.io/media/games/5a4/5a44112251d70a25291cc33757220fce.jpg",
                            Name = "RPG",
                            Slug = "role-playing-games-rpg"
                        },
                        new
                        {
                            Id = 261,
                            Image = "https://media.rawg.io/media/games/78d/78dfae12fb8c5b16cd78648553071e0a.jpg",
                            Name = "Simulation",
                            Slug = "simulation"
                        },
                        new
                        {
                            Id = 43,
                            Image = "https://media.rawg.io/media/games/fc1/fc1307a2774506b5bd65d7e8424664a7.jpg",
                            Name = "Shooter",
                            Slug = "shooter"
                        },
                        new
                        {
                            Id = 192,
                            Image = "https://media.rawg.io/media/games/388/388935d851846f8ec747fffc7c765800.jpg",
                            Name = "Platformer",
                            Slug = "platformer"
                        },
                        new
                        {
                            Id = 155,
                            Image = "https://media.rawg.io/media/games/27b/27b02ffaab6b250cc31bf43baca1fc34.jpg",
                            Name = "Arcade",
                            Slug = "arcade"
                        },
                        new
                        {
                            Id = 148,
                            Image = "https://media.rawg.io/media/games/c2e/c2e6ad5c838d551aeff376f1f3d9d65e.jpg",
                            Name = "Puzzle",
                            Slug = "puzzle"
                        },
                        new
                        {
                            Id = 353,
                            Image = "https://media.rawg.io/media/screenshots/b20/b20a20205954f9765e82298dbd41e48a.jpg",
                            Name = "Casual",
                            Slug = "casual"
                        },
                        new
                        {
                            Id = 384,
                            Image = "https://media.rawg.io/media/games/d07/d0790809a13027251b6d0f4dc7538c58.jpg",
                            Name = "Massively Multiplayer",
                            Slug = "massively-multiplayer"
                        },
                        new
                        {
                            Id = 34,
                            Image = "https://media.rawg.io/media/games/788/788b80cbc8c39167f7ed6dd89fd398dc.jpg",
                            Name = "Racing",
                            Slug = "racing"
                        },
                        new
                        {
                            Id = 170,
                            Image = "https://media.rawg.io/media/games/082/082365507ff04d456c700157072d35db.jpg",
                            Name = "Sports",
                            Slug = "sports"
                        },
                        new
                        {
                            Id = 135,
                            Image = "https://media.rawg.io/media/games/91b/91be1a00c767f9e3d79353e505d7f85a.jpg",
                            Name = "Fighting",
                            Slug = "fighting"
                        },
                        new
                        {
                            Id = 492,
                            Image = "https://media.rawg.io/media/screenshots/d62/d628164463ac6fc7ab28b5a988191582.jpg",
                            Name = "Board Games",
                            Slug = "board-games"
                        },
                        new
                        {
                            Id = 471,
                            Image = "https://media.rawg.io/media/games/7ca/7ca90d463ea0c0252e7d01afe897ffa8.jpg",
                            Name = "Educational",
                            Slug = "educational"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Platforme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Platformes");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Name = "Pc",
                            Slug = "pc"
                        },
                        new
                        {
                            Id = 126,
                            Name = "PlayStation",
                            Slug = "playstation"
                        },
                        new
                        {
                            Id = 212,
                            Name = "Xbox",
                            Slug = "xbox"
                        },
                        new
                        {
                            Id = 135,
                            Name = "IOS",
                            Slug = "iOS"
                        },
                        new
                        {
                            Id = 349,
                            Name = "Android",
                            Slug = "android"
                        },
                        new
                        {
                            Id = 270,
                            Name = "Apple Macintosh",
                            Slug = "mac"
                        },
                        new
                        {
                            Id = 158,
                            Name = "Linux",
                            Slug = "linux"
                        },
                        new
                        {
                            Id = 311,
                            Name = "Nintendo",
                            Slug = "nintendo"
                        },
                        new
                        {
                            Id = 132,
                            Name = "Atari",
                            Slug = "atari"
                        },
                        new
                        {
                            Id = 321,
                            Name = "SEGA",
                            Slug = "sega"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Game", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.GamePlatformes", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Game", "Game")
                        .WithMany("GamePlatformes")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.Platforme", "Platforme")
                        .WithMany("GamePlatformes")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platforme");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Game", b =>
                {
                    b.Navigation("GamePlatformes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Genre", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Platforme", b =>
                {
                    b.Navigation("GamePlatformes");
                });
#pragma warning restore 612, 618
        }
    }
}
